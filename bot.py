# _______________________________________________–ë–ò–ë–õ–ò–û–¢–ï–ö–ò_____________________________________________________________
# –±–∏–±–ª–∏–æ—Ç–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞:
import time
import logging
from aiogram import Bot, Dispatcher, types, executor
import datetime
import sqlite3
import pandas as pd
import csv
from tabulate import tabulate

# _______________________________________________–ë–ê–ó–ê_–î–ê–ù–ù–´–•____________________________________________________________

# —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
base = sqlite3.connect('time_working_bot.db')
cursor = base.cursor()

# —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
base.execute(
    "CREATE TABLE IF NOT EXISTS {} (id, time_working_hours INT, time_working_minets INT, today INT, week_today INT, "
    "month_today INT, year_today INT)".format('time_working_bot'))
base.commit()

# _______________________________________________–§–£–ù–ö–¶–ò–ò________________________________________________________________


# _________________________________–í–†–ï–ú–Ø

# –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
_time_ = []
result = 0


# –∫–æ—Å—Ç—ã–ª—å –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
def check_time():
    global result
    if len(_time_) >= 2:
        _time_.clear()
    _time_.append(time.time())

    if len(_time_) == 2:
        result = _time_[-1] - _time_[0]

    return result


# _________________________________–ù–ê–ß–ê–õ–¨–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –Ω–∞—á–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ä–Ω–∏—Ü—ã ("—Å—Ç–∞—Ä—Ç", "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é", "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü")
def create_mark():
    mark_start = types.KeyboardButton(text='Start', callback_data="Start")
    mark_stats_week = types.KeyboardButton(text="Week's stats üìë", callback_data="Week's stats üìë")
    mark_stats_month = types.KeyboardButton(text="Month's stats üóÇ", callback_data="Month's stats üóÇ")
    mark_donate = types.KeyboardButton(text="üí∏")
    mark = types.ReplyKeyboardMarkup(resize_keyboard=True)
    mark.add(mark_start, mark_stats_week, mark_stats_month, mark_donate)
    return mark


# _________________________________END

# —Å–æ–∑–¥–∞–¥–∏–º –∫–Ω–æ–ø–∫—É end –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
def create_end():
    mark_end = types.ReplyKeyboardMarkup(resize_keyboard=True)
    mark_end_work = types.KeyboardButton("End")
    mark_end.add(mark_end_work)
    return mark_end


# _________________________________–î–ê\–ù–ï–¢

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ "–¥–∞" –∏ "–Ω–µ—Ç", —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±—É–¥–µ—Ç –ª–∏ —á–µ–ª–æ–≤–µ–∫ —Å–µ–≥–æ–¥–Ω—è –µ—â–µ —Ä–∞–±–æ—Ç–∞—Ç—å
def create_yes_no():
    yes_no_button = types.ReplyKeyboardMarkup(resize_keyboard=True)
    inline_button_yes = types.KeyboardButton(text='–î–∞', callback_data='yes')
    inline_button_no = types.KeyboardButton('–ù–µ—Ç', callback_data='no')
    yes_no_button.add(inline_button_yes, inline_button_no)
    return yes_no_button


# _________________________________–ú–ò–ù–£–¢–´=>–ß–ê–°–´

# –ø–µ—Ä–µ–≤–µ–¥–µ–º –º–∏–Ω—É—Ç—ã –≤ —á–∞—Å—ã
def minets_in_hours(hours, minets):
    if minets >= 60:
        hours += minets // 60
        minets = minets % 60
    return hours, minets


# _________________________________–°–¢–ê–¢–ò–°–¢–ò–ö–ê_–ö–û–õ–ò–ß–ï–°–¢–í–ê_–Æ–ó–ï–†–û–í
# —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = []

# –≤–Ω–µ—Å–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ csv —Ñ–∞–π–ª–∞ –Ω–∞ —Ç–æ—Ç —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
with open("users.csv", "r") as file:
    reader = csv.reader(file)

    for line in reader:
        user_data.append(line)


def main_statics(user):

    # –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –Ω–µ–¥–µ—é
    statics_week(user)

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ
    data_table = pd.read_csv("users.csv")
    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ, —Ç–æ –º—ã –ø—Ä–µ—Ä–≤–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    if user[0] in data_table:
        return None

    # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ csv —Ñ–∞–π–ª–∞
    user_data.append([f'{user}'])
    with open("users.csv", "w", newline='') as file:
        writer = csv.writer(file)
        writer.writerows(
            user_data
        )


# _________________________________–°–¢–ê–¢–ò–°–¢–ò–ö–ê_–Æ–ó–ï–†–û–í_–°–î–ï–õ–ê–í–®–ò–•_–†–ê–ë–û–ß–ò–ô_–¶–ò–ö–õ
# —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_work_data = []

# –≤–Ω–µ—Å–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ csv —Ñ–∞–π–ª–∞ –Ω–∞ —Ç–æ—Ç —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
with open("users_work.csv", "r") as file:
    reader = csv.reader(file)

    for line in reader:
        user_work_data.append(line)


def statics_work_user(user):
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ
    data_table = pd.read_csv("users_work.csv")
    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ, —Ç–æ –º—ã –ø—Ä–µ—Ä–≤–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    if user[0] in data_table:
        return None

    # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ csv —Ñ–∞–π–ª–∞
    user_work_data.append([f'{user}'])
    with open("users_work.csv", "w", newline='') as file:
        writer = csv.writer(file)
        writer.writerows(
            user_work_data
        )


# _________________________________–°–¢–ê–¢–ò–°–¢–ò–ö–ê_–Æ–ó–ï–†–û–í_–ù–ê–ñ–ê–í–®–ò–•_–ö–ù–û–ü–ö–£_–î–û–ù–ê–¢
# —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_donate_data = []

# –≤–Ω–µ—Å–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ csv —Ñ–∞–π–ª–∞ –Ω–∞ —Ç–æ—Ç —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
with open("users_donate.csv", "r") as file:
    reader = csv.reader(file)

    for line in reader:
        user_donate_data.append(line)


def statics_donate(user):
    # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ csv —Ñ–∞–π–ª–∞
    user_donate_data.append([f'{user}'])
    with open("users_donate.csv", "w", newline='') as file:
        writer = csv.writer(file)
        writer.writerows(
            user_donate_data
        )


# _________________________________–°–¢–ê–¢–ò–°–¢–ò–ö–ê_–ö–û–õ–ò–ß–ï–°–¢–í–ê_–Æ–ó–ï–†–û–í_–ó–ê_–ù–ï–î–ï–õ–Æ
def statics_week(user):
    # –ø–æ—Å–º–æ—Ç—Ä–∏–º –∫–∞–∫–∞—è —Å–µ–π—á–∞—Å –Ω–µ–¥–µ–ª—è
    week_today = datetime.date.today()
    week_today = int(week_today.isocalendar()[1])

    # –≤–æ–∑—å–º–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É
    today = int(datetime.date.today().day)

    # —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_week_data = []

    # –≤–æ–∑—å–º–µ–º –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ (–æ–Ω —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Ñ–∞–π–ª–µ)
    with open("users_week.csv", "r") as file:
        reader = csv.reader(file)

        for line in reader:
            week_yesterday = int(line[0])
            break

    if week_yesterday != week_today:
        user_week_data.append([f'{week_today}', '0'])
    else:
        with open("users_week.csv", "r") as file:
            reader = csv.reader(file)

            for line in reader:
                user_week_data.append(line)

    # –¥–æ–±–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    user_week_data.append([f'{user}', f'{today}'])
    with open("users_week.csv", "w", newline='') as file:
        writer = csv.writer(file)
        writer.writerows(
            user_week_data
        )


# _______________________________________________–¢–û–ö–ï–ù__________________________________________________________________
# —Ç–æ–∫–µ–Ω
bot = Bot(token="5574438443:AAGkNGCg2XqwsdnbGMA6G2p-1Vs1KueU-4s")
dp = Dispatcher(bot)


# _______________________________________________–ö–û–î____________________________________________________________________


# –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞—á–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–æ–º–∞–Ω–¥—ã start
# –±–æ—Ç –≤—ã–¥–∞—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º (—Å—Ç–∞—Ä—Ç, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü)
@dp.message_handler(commands=['start'])
async def start_bot(message: types.Message):
    # –≤–æ–∑—å–º–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –µ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    user_first_name = message.from_user.first_name
    logging.info(f' {user_first_name} {time.asctime()}')  # —è –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –∑–∞—á–µ–º –Ω–∞–º logging, –∫–∞–∫ —Ä–∞–∑–±–µ—Ä—É—Å—å,
    # —Ç–æ –¥–æ—Ä–∞–±–æ—Ç–∞—é

    # –ø–æ–ª—É—á–∏–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –≤ csv —Ñ–∞–π–ª
    user_id = str(message.from_user.id)

    # –¥–æ–±–∞–≤–∏–º id –≤ csv
    main_statics(user_id)

    # —Å–æ–∑–¥–∞–¥–∏–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    mark = create_mark()

    # –≤—ã–≤–µ–¥–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–∏–≤–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ –±–æ—Ç–∞ –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
    await message.answer(
        f'–ü—Ä–∏–≤–µ—Ç {user_first_name}. –≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Å—Ç–∏–∫—É –≤—Ä–µ–º–µ–Ω–∏ –∑–∞ —Ä–∞–±–æ—Ç–æ–π\n'
        f'\n'
        f'–ü–æ–º–∏–º–æ —Ç–≤–æ–µ–≥–æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞, –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –Ω–µ–¥–µ–ª—é –∏ –º–µ—Å—è—Ü! üòâ')
    await message.answer(
        f"·Ö† ·Ö† ·Ö† ‚öôÔ∏è–ö–æ–º–∞–Ω–¥—ã:\n"
        f"‚ñ∂ Start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—á—É—é —Å–µ—Å—Å–∏—é\n"
        f"‚èπ End - –∑–∞–∫–æ–Ω—á–∏—Ç—å —Ä–∞–±–æ—á—É—é —Å–µ—Å—Å–∏—é\n"
        f"‚Ü© Week's stats - —Å—Ç–∞—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é\n"
        f"üîÅ Month's stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü",
        reply_markup=mark)


# –±–æ—Ç –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç "—Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã" –∏ –ø–æ—Å–ª–µ –µ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–µ–Ω—é
# –≤ –¥–∞–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ end
@dp.message_handler(content_types=['text'])
async def work(message):
    # –≤–æ–∑—å–º–µ–º –ø–µ—Ä–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    user_first_name = message.from_user.first_name

    # —Å–æ–∑–¥–∞–¥–∏–º –∫–Ω–æ–ø–∫—É end –∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã
    if message.text == 'Start':
        mark_end = create_end()
        check_time()

        # –æ—Ç–ø—Ä–∞–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –¥–∞–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–Ω–æ–ø–∫—É end –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
        await message.answer(f'–ü—Ä–æ–≤–µ–¥–∏ —ç—Ç–æ –≤—Ä–µ–º—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ, {user_first_name}! üöÄ',
                             reply_markup=mark_end)

    # –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ end –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é
    # —Ç–∞–∫–∂–µ id, —á–∞—Å—ã, –º–∏–Ω—É—Ç—ã —Ä–∞–±–æ—Ç—ã –∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞-–Ω–µ–¥–µ–ª—è-–º–µ—Å—è—Ü-–≥–æ–¥ –¥–æ–±–∞–≤—è—Ç—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if message.text == "End":
        # —Å–ø—Ä–æ—Å–∏–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—É–¥–µ—Ç –ª–∏ –æ–Ω —Å–µ–≥–æ–¥–Ω—è –µ—â–µ —Ä–∞–±–æ—Ç–∞—Ç—å
        # –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ–∑–¥–∞–¥–∏–º –¥–≤–µ –∫–Ω–æ–ø–∫–∏ "–¥–∞" –∏ "–Ω–µ—Ç"
        yes_no_button = create_yes_no()

        # –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã
        check_time()

        # –ø–µ—Ä–µ–≤–µ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Å—ã : –º–∏–Ω—É—Ç—ã : —Å–µ–∫—É–Ω–¥—ã
        result_hour = round(result // 3600)
        result_minets = round((result % 3600) // 60)
        result_seconds = round(result % 60)

        # –≤–æ–∑—å–º–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —è—á–µ–π–∫—É –≤ —Ç–∞–±–ª–∏—Ü–µ
        bot_id = str(message.from_user.id)

        # –≤–æ–∑—å–º–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö string, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã –≤ —Ç–∞–±–ª–∏—Ü—É –±–¥
        bot_time_working_hours = str(result_hour)
        bot_time_working_minets = str(result_minets)

        # –≤–æ–∑—å–º–µ–º –¥–∞–Ω–Ω—ã–µ –¥–Ω—è, –Ω–µ–¥–µ–ª–∏, –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞ –≤ —Ü–∏—Ñ—Ä–∞—Ö, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        date_week_cloud = datetime.date.today()
        date_week = int(date_week_cloud.isocalendar()[1])
        date_month = int(datetime.date.today().month)
        date_year = int(datetime.date.today().year)
        today = int(datetime.date.today().day)

        # –∑–∞–ø–æ–ª–Ω–∏–º —Ç–∞–±–ª–∏—Ü—É
        cursor.execute('INSERT INTO time_working_bot VALUES (?, ?, ?, ?, ?, ?, ?)', (
            bot_id, bot_time_working_hours, bot_time_working_minets, today, date_week, date_month, date_year))
        base.commit()

        # –≤—ã–≤–µ–¥–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ä–∞–±–æ—Ç—ã, –∫–æ—Ç–æ—Ä—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–µ–π—á–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª
        await message.answer(
            f'ü¶Å {user_first_name}, —Ç—ã —Ä–∞–±–æ—Ç–∞–ª {result_hour} —á : {result_minets} –º–∏–Ω : {result_seconds} —Å')

        # c–ø—Ä–æ—Å–∏–º —É —é–∑–µ—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª –æ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –Ω–µ—Ç
        await message.reply(f'–¢—ã –ø–ª–∞–Ω–∏—Ä—É–µ—à—å —Å–µ–≥–æ–¥–Ω—è –µ—â–µ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å? üè∞', reply_markup=yes_no_button)

    # –ø—Ä–æ–≤–µ—Ä–∏–º –±—É–¥–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ –∫–æ–Ω—Ü–µ —Ä–∞–±–æ—Ç—ã "–¥–∞" –∏–ª–∏ "–Ω–µ—Ç"
    # –µ—Å–ª–∏ –¥–∞, —Ç–æ –º—ã —Å–∫–∞–∂–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è
    if message.text == '–î–∞':
        # –≤–µ—Ä–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã –æ–Ω –º–æ–≥ —Å–Ω–æ–≤–∞ –Ω–∞–∂–∞—Ç—å start
        mark = create_mark()

        # –≤—ã–≤–µ–¥–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        await message.answer('–•–æ—Ä–æ—à–æ, —Å–¥–µ–ª–∞–π –ø–µ—Ä–µ—Ä—ã–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è üßëüèº‚Äçüíª', reply_markup=mark)

    # –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ—Ç, —Ç–æ –µ—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è —é–∑–µ—Ä –±–æ–ª—å—à–µ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç, —Ç–æ –≤—ã–≤–µ–¥–µ—Ç —Å—Ç–∞—Ç—ã –∑–∞ –¥–µ–Ω—å –∏ –ø–æ—Ö–≤–∞–ª–∏–º –∑–∞
    # —Ö–æ—Ä–æ—à—É—é —Ä–∞–±–æ—Ç—É, –∞ —Ç–∞–∫–∂–µ –≤–µ—Ä–Ω–µ–º –≤ –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if message.text == '–ù–µ—Ç':

        # –≤–µ—Ä–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã
        mark = create_mark()

        # –≤–æ–∑—å–º–µ–º –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞(—á—Ç–æ–±—ã —á–∏—Å—Ç–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –æ—Ç —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
        today_month = int(datetime.date.today().month)
        today_year = int(datetime.date.today().year)

        # —É–¥–∞–ª–∏–º –ª–∏—à–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø—Ä–æ—à–ª—ã–µ –º–µ—Å—è—Ü—ã
        cursor.execute("DELETE FROM time_working_bot WHERE month_today < ? or year_today < ?",
                       (today_month, today_year,))
        base.commit()

        # –≤–æ–∑—å–º–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–∞—Ç–µ, —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è
        today = int(datetime.date.today().day)

        # –≤–æ–∑—å–º–µ–º–µ id —é–∑–µ—Ä–∞
        user_id = str(message.from_user.id)

        # –¥–æ–±–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—Ç–∞—Å—Ç–∏–∫—É (—Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–¥–µ–ª–∞–≤—à–∏—Ö –ø–æ–ª–Ω—É—é —Ä–∞–±–æ—á—É—é —Å–µ—Å—Å–∏—é)
        statics_work_user(user_id)

        # —Å–¥–µ–ª–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥ —á–∞—Å—ã –∏ –º–∏–Ω—É—Ç—ã
        today_hour = []
        today_minets = []

        # –≤–æ–∑—å–º–µ–º —Å—Ç—Ä–æ–∫–∏, –≥–¥–µ –∑–∞–ø–∏—Å–∞–Ω–æ —Å–∫–æ–ª—å–∫–æ –ß–ê–°–û–í –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–µ–≥–æ–¥–Ω—è —Ä–∞–±–æ—Ç–∞–ª
        cursor.execute('SELECT time_working_hours FROM time_working_bot WHERE id == ? and today == ?',
                       (user_id, today,))
        rows = cursor.fetchall()

        # –∑–∞–ø–æ–ª–Ω–∏–º —Å–ø–∏—Å–æ–∫ –ß–ê–°–ê–ú–ò –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –∑–∞ —Ä–∞–±–æ—Ç–æ–π
        for row in rows:
            today_hour.append(int(''.join(map(str, row))))

        # —Å–¥–µ–ª–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–∞—Å—Å—á–µ—Ç—ã –ø–æ —Å—É–º–º–µ —á–∞—Å–æ–≤
        result_today_hours = sum(today_hour)

        # –≤–æ–∑—å–º–µ–º —Å—Ç—Ä–æ–∫–∏, –≥–¥–µ –∑–∞–ø–∏—Å–∞–Ω–æ —Å–∫–æ–ª—å–∫–æ –ú–ò–ù–£–¢ —Ä–∞–±–æ—Ç–∞–ª —é–∑–µ—Ä
        cursor.execute('SELECT time_working_minets FROM time_working_bot WHERE id == ? and today == ?',
                       (user_id, today,))
        rows = cursor.fetchall()

        # –∑–∞–ø–æ–ª–Ω–∏–º —Å–ø–∏—Å–æ–∫ –ú–ò–ù–£–¢–ê–ú–ò —Ä–∞–±–æ—Ç—ã
        for row in rows:
            today_minets.append(int(''.join(map(str, row))))

        # –ø–æ—Å—á–∏—Ç–∞–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ –∫–æ–ª-–≤–æ —Ä–∞–±–æ—Ç—ã –≤ –º–∏–Ω—É—Ç–∞—Ö –∏ —á–∞—Å–∞—Ö
        result_today_minets = sum(today_minets)

        # –ø–æ—Å—á–∏—Ç–∞–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ –∫–æ–ª-–≤–æ —á–∞—Å–æ–≤ –∏ –º–∏–Ω—É—Ç
        result_today_hours, result_today_minets = minets_in_hours(result_today_hours, result_today_minets)

        # –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏—Ç–æ–≥–∞–º–∏ —Ä–∞–±–æ—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è
        await message.answer(f'üëª –°–µ–≥–æ–¥–Ω—è —Ç—ã —Ä–∞–±–æ—Ç–∞–ª {result_today_hours} —á : {result_today_minets} –º–∏–Ω',
                             reply_markup=mark)

        # –¥–∞–¥–∏–º —é–∑–µ—Ä—É –º–µ–¥–∞–ª—å–∫—É –∑–∞ —Ö–æ—Ä–æ—à—É—é —Ä–∞–±–æ—Ç—É
        if result_today_hours > 4:
            await message.answer(f"–¢—ã –º–æ–ª–æ–¥–µ—Ü! –î–µ—Ä–∂–∏ –º–µ–¥–∞–ª—å–∫—É –∑–∞ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É ‚ò∫")
            await message.answer_sticker(
                r'CAACAgIAAxkBAAEGS1hjY42-OBYJTXavT2dpo1VZHw3T8gACSBsAAkPgIUtBdQPtOKSdByoE')

    # –≤—ã–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –Ω–µ–¥–µ–ª—é
    if message.text == "Week's stats üìë":

        # –≤–æ–∑—å–º–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        user_id = str(message.from_user.id)

        # —Å–æ—Å–∑–¥–∞–¥–∏–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (—á–∞—Å—ã)
        week_stats_hours = []

        # —Å–æ–∑–¥–∞–¥–∏–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–º–∏–Ω—É—Ç—ã)
        week_stats_minets = []

        # –≤–æ–∑—å–º–µ–º –Ω–æ–º–µ—Ä —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏
        today_week = datetime.date.today()
        today_week = today_week.isocalendar()[1]

        # –≤–æ–∑—å–º–µ–º –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞(—á—Ç–æ–±—ã —á–∏—Å—Ç–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –æ—Ç —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
        today_month = int(datetime.date.today().month)
        today_year = int(datetime.date.today().year)

        # —É–¥–∞–ª–∏–º –ª–∏—à–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø—Ä–æ—à–ª—ã–µ –º–µ—Å—è—Ü—ã
        cursor.execute("DELETE FROM time_working_bot WHERE month_today < ? or year_today < ?",
                       (today_month, today_year,))
        base.commit()

        # –≤–æ–∑—å–º–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω—ã—ã—Ö –ß–ê–°–ê–• –∑–∞ —Ä–æ–±–æ—Ç–æ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Å –ø–æ–º–æ—â—å—é id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("SELECT time_working_hours FROM time_working_bot WHERE id == ? and week_today == ?",
                       (user_id, today_week,))
        rows = cursor.fetchall()

        # –¥–æ—Å—Ç–∞–Ω–µ–º –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–º, —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –ø–æ–º–µ—Å—Ç–∏–º –≤ —Å–ø–∏—Å–æ–∫
        for row in rows:
            week_stats_hours.append(int(''.join(map(str, row))))

        # –ø–æ—Å—á–∏—Ç–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –∑–∞ –Ω–µ–¥–µ–ª—é (–ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π, –ø–æ—Ç–æ–º—É —á—Ç–æ –µ—â–µ –º–∏–Ω—É—Ç—ã —Å—Ñ–æ—Ä–º–∏—Ä—É—é—Ç
        # –≤ —Å—É–º–º–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤)
        result_week_hours = sum(week_stats_hours)

        # –≤–æ–∑—å–º–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ—Ä–∫ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö –ú–ò–ù–£–¢–ê–• –∑–∞ —Ä–æ–±–æ—Ç–æ–π –ø–æ–ª—å–∑–æ–≤—Ç–µ–ª—è
        cursor.execute("SELECT time_working_minets FROM time_working_bot WHERE id == ? and week_today == ?",
                       (user_id, today_week,))
        rows = cursor.fetchall()

        # –¥–æ—Å—Ç–∞–Ω–µ–º –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–º, —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø—Ä–æ–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞ —Ä–∞–±–æ—Ç–æ–π
        for row in rows:
            week_stats_minets.append(int(''.join(map(str, row))))

        # –ø–æ—Å—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç
        result_week_minets = sum(week_stats_minets)

        # –ø–æ—Å—á–∏—Ç–∞–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ –∫–æ–ª-–≤–æ —á–∞—Å–æ–≤ –∏ –º–∏–Ω—É—Ç
        result_week_hors, result_week_minets = minets_in_hours(result_week_hours, result_week_minets)

        # –≤–µ—Ä–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã
        mark = create_mark()

        await message.answer(f"üìëüìëüìë\n"
                             f"–ó–∞ –Ω–µ–¥–µ–ª—é —Ç—ã —Ä–∞–±–æ—Ç–∞–ª:\n"
                             f"____________________________\n"
                             f"{result_week_hours} —á–∞—Å–æ–≤ : {result_week_minets} –º–∏–Ωy—Ç\n"
                             f"____________________________", reply_markup=mark)

    # —Å–¥–µ–ª–∞–µ–º –≤—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –º–µ—Å—è—Ü
    if message.text == "Month's stats üóÇ":

        # –≤–æ–∑—å–º–µ–º id —é–∑–µ—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –µ–≥–æ –¥–∞–Ω–Ω—ã—Ö
        user_id = str(message.from_user.id)

        # —Å–æ—Å–∑–¥–∞–¥–∏–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (—á–∞—Å—ã)
        month_stats_hours = []

        # —Å–æ–∑–¥–∞–¥–∏–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–º–∏–Ω—É—Ç—ã)
        month_stats_minets = []

        # –≤–æ–∑—å–º–µ–º –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –∏ —É–¥–∞–ª–∏—Ç—å –ª–∏—à–Ω–∏–µ
        today_month = int(datetime.date.today().month)
        today_year = int(datetime.date.today().year)

        # —É–¥–∞–ª–∏–º –ª–∏—à–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø—Ä–æ—à–ª—ã–µ –º–µ—Å—è—Ü—ã
        cursor.execute("DELETE FROM time_working_bot WHERE month_today < ? or year_today < ?",
                       (today_month, today_year,))
        base.commit()

        # –≤–æ–∑—å–º–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω—ã—ã—Ö –ß–ê–°–ê–• –∑–∞ —Ä–æ–±–æ—Ç–æ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Å –ø–æ–º–æ—â—å—é id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("SELECT time_working_hours FROM time_working_bot WHERE id == ? and month_today == ?",
                       (user_id, today_month,))
        rows = cursor.fetchall()

        # –¥–æ—Å—Ç–∞–Ω–µ–º –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–º, —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –ø–æ–º–µ—Å—Ç–∏–º –≤ —Å–ø–∏—Å–æ–∫
        for row in rows:
            month_stats_hours.append(int(''.join(map(str, row))))

        # –ø–æ—Å—á–∏—Ç–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –∑–∞ –Ω–µ–¥–µ–ª—é (–ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π, –ø–æ—Ç–æ–º—É —á—Ç–æ –µ—â–µ –º–∏–Ω—É—Ç—ã —Å—Ñ–æ—Ä–º–∏—Ä—É—é—Ç
        # –≤ —Å—É–º–º–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤)
        result_month_hours = sum(month_stats_hours)

        # –≤–æ–∑—å–º–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ—Ä–∫ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö –ú–ò–ù–£–¢–ê–• –∑–∞ —Ä–æ–±–æ—Ç–æ–π –ø–æ–ª—å–∑–æ–≤—Ç–µ–ª—è
        cursor.execute("SELECT time_working_minets FROM time_working_bot WHERE id == ? and month_today == ?",
                       (user_id, today_month,))
        rows = cursor.fetchall()

        # –¥–æ—Å—Ç–∞–Ω–µ–º –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–º, —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø—Ä–æ–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞ —Ä–∞–±–æ—Ç–æ–π
        for row in rows:
            month_stats_minets.append(int(''.join(map(str, row))))

        # –ø–æ—Å—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç
        result_month_minets = sum(month_stats_minets)

        # –ø–æ—Å—á–∏—Ç–∞–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ –∫–æ–ª-–≤–æ —á–∞—Å–æ–≤ –∏ –º–∏–Ω—É—Ç
        result_month_hours, result_month_minets = minets_in_hours(result_month_hours, result_month_minets)

        # –≤–µ—Ä–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã
        mark = create_mark()

        await message.answer(f"üóÇüóÇüóÇ\n"
                             f"–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ —Ç—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–ª –≤ —Ä–∞–±–æ—Ç—É:\n"
                             f"____________________________\n"
                             f"{result_month_hours} —á : {result_month_minets} –º–∏–Ω\n"
                             f"____________________________",
                             reply_markup=mark)

    # –∫–Ω–æ–ø–∫–∞ –ø–æ–¥ –¥–æ–Ω–∞—Ç
    if message.text == "üí∏":
        # —Å–æ–∑–¥–∞–Ω–∏–µ —Å–∞–º–æ–π –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ –¥–æ–Ω–∞—Ç
        mark_donate = types.InlineKeyboardMarkup()
        mark_donate_inline = types.InlineKeyboardButton("üí∏", url="t.me/donat_time_working_bot")
        mark_donate.add(mark_donate_inline)

        # –≤–æ–∑—å–º–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        user_id = message.from_user.id

        # –¥–æ–±–∞–≤–∏–º —é–∑–µ—Ä–∞ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        statics_donate(user_id)

        # –≤–µ—Ä–Ω–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        mark = create_mark()

        # —Ä–æ–º–∞–Ω—Ç–∏—á–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ —é–∑–µ—Ä—É
        await message.answer(f'–°–æ–∑–¥–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –±—ã–ª–æ –Ω–µ–ø—Ä–æ—Å—Ç–æ, –Ω–æ —è —Å–¥–µ–ª–∞–ª —ç—Ç–æ! üòå –ü–æ—Ç–æ–º—É —á—Ç–æ –º–Ω–µ –Ω–µ —Ö–≤–∞—Ç–∞–ª–æ '
                             '–∏–º–µ–Ω–Ω–æ —Ç–∞–∫–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞...\n'
                             '\n'
                             '–†–µ–∫–ª–∞–º—É, —è –∫—Å—Ç–∞—Ç–∏, –≤ –±–æ—Ç–∞ –≤—Å—Ç–∞–≤–ª—è—Ç—å –Ω–µ —Å—Ç–∞–ª üôÇ'
                             '\n'
                             '–ï—Å–ª–∏ –±–æ—Ç –¥–µ–ª–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ç–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã —É–¥–æ–±–Ω–µ–µ –∏–ª–∏ —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, —Ç–æ –º–æ–∂–µ—à—å '
                             '–ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Å–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –¥–æ–Ω–∞—Ç—É (–¥–∞–∂–µ –æ—Ç 10‚ÇΩ)\n'
                             '\n'
                             '–Ø —É–≤–∏–∂—É —Ç–≤–æ—é –º—ã—Å–ª—å üòâ\n'
                             '–í–æ–∑–º–æ–∂–Ω–æ, —Ç—ã –ø–æ–≤–ª–∏—è–µ—à—å –Ω–∞ –¥–∞–ª—å–Ω–µ—à–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ —ç—Ç–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞',
                             reply_markup=mark)

        # –≤—ã–≤–æ–¥ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ –¥–æ–Ω–∞—Ç
        await message.answer('–û—Ç–ø—Ä–∞–≤–∏—Ç—å donate –º–æ–∂–Ω–æ –ø–æ –∫–Ω–æ–ø–∫–µ "üí∏" –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º ', reply_markup=mark_donate)

    # –≤—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –æ–±—â–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if message.text == "Stat_time_bot_1978":

        # —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ–±—â–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        main_results = pd.read_csv("users.csv")

        # —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ–±—â–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–¥–µ–ª–∞–≤—à–∏—Ö –ø–æ–ª–Ω—ã–π —Ä–∞–±–æ—á–∏–π —Ü–∏–∫–ª
        work_results = pd.read_csv("users_work.csv")

        # —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ–±—â–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–∞–∂–∞–≤—à–∏—Ö –∫–Ω–æ–ø–∫—É –¥–æ–Ω–∞—Ç
        donate_results = pd.read_csv("users_donate.csv")

        # –≤—ã–≤–æ–¥ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        await message.answer(f'All: {len(main_results) : 15} users\n'
                             f'Work: {len(work_results) : 10} users\n'
                             f'Donate: {len(donate_results) : 6} users\n'
                             f'\n'
                             f'Statistics of new users for the week ‚¨áÔ∏è')

        # —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –Ω–µ–¥–µ–ª—é –ø–æ –¥–Ω—è–º

        # –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–æ–º–µ—Ä —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –Ω–µ–¥–µ–ª–∏, —á—Ç–æ–±—ã —É—á–µ—Å—Ç—å —ç—Ç–æ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞
        week_today = datetime.date.today()
        week_today = int(week_today.isocalendar()[1])

        # –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç–∏ –¥–Ω—è –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –¥–µ–Ω—å
        date = 0
        res_day = 0

        # —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –≤—ã–≤–æ–¥–∞
        table = [('Data:', 'Users:')]

        with open("users_week.csv", "r") as file:
            reader = csv.reader(file)

            for line in reader:
                if int(line[0]) == week_today:
                    continue
                if date != int(line[1]):
                    if date != 0:
                        table.append((f'{date}', f'{res_day}'))
                    date = int(line[1])
                    res_day = 1
                else:
                    res_day += 1

            table.append((f'{date}', f'{res_day}'))

        # –∑–∞–¥–∞–¥–∏–º –≤–Ω–µ—à–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
        table = tabulate(table, headers='firstrow', stralign='center')

        await message.answer(f'{table}')






# –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
if __name__ == '__main__':
    executor.start_polling(dp)
